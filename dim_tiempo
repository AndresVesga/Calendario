let
  // Definir el tiempo inicial, número de intervalos y duración del intervalo
  StartTime = #time(0, 0, 0),
  // 00:00
  NumberOfIntervals = 1440,
  // 1440 intervalos de 1 minuto en 24 horas
  IntervalDuration = #duration(0, 0, 1, 0),
  // Intervalo de 1440 minutos
  // Crear una lista de tiempos
  TimeList = List.Times(StartTime, NumberOfIntervals, IntervalDuration),
  // Convertir la lista en una tabla
  TimeTable = Table.FromList(TimeList, Splitter.SplitByNothing(), {"Intervalo_Horario"}),
  ChangeType = Table.TransformColumnTypes(TimeTable, {{"Intervalo_Horario", type time}}),
  // Agregar columnas categóricas para segmentar los horarios
  AddHour = Table.AddColumn(ChangeType, "Hora", each Time.Hour([Intervalo_Horario])),
  AddMinute = Table.AddColumn(AddHour, "Minuto", each Time.Minute([Intervalo_Horario])),
  AddPeriod = Table.AddColumn(AddMinute, "Jornada", each if Time.Hour([Intervalo_Horario]) < 6 then "Madrugada" else if Time.Hour([Intervalo_Horario]) < 12 then "Mañana" else if Time.Hour([Intervalo_Horario]) < 18 then "Tarde" else "Noche"),
  AddOrderPeriod = Table.AddColumn(AddPeriod, "Order_Jornada", each if Time.Hour([Intervalo_Horario]) < 6 then 0 else if Time.Hour([Intervalo_Horario]) < 12 then 1 else if Time.Hour([Intervalo_Horario]) < 18 then 2 else 3),
  // Agregar columnas adicionales si es necesario
  AddAMPM = Table.AddColumn(AddOrderPeriod, "AM/PM", each if Time.Hour([Intervalo_Horario]) < 12 then "AM" else "PM"),
  AddHourLabel = Table.AddColumn(AddAMPM, "Etiqueta Hora", each if [Minuto] >= 0 and  [Minuto] <= 29 
    then 
     Number.ToText( [Hora] ) & ":00"
    else 
     Number.ToText( [Hora] ) & ":30"),
  DataTypes = Table.TransformColumnTypes(AddHourLabel, {{"Hora", type text}, {"Minuto", type text}, {"Jornada", type text}, {"AM/PM", type text}, {"Etiqueta Hora", type text}, {"Order_Jornada", Int64.Type}}),
  AddHorasPico = Table.AddColumn(DataTypes, "HorasPico", each if Number.From([Hora]) >= 9 
and Number.From([Hora]) <= 23 then 1 else 0),
  HorasPicoTypeText = Table.TransformColumnTypes(AddHorasPico, {{"HorasPico", type text}}),
 Add_Rango_horario = Table.AddColumn(HorasPicoTypeText, "rango_horario", each 
        let
            hora = Time.Hour([Intervalo_Horario])
        in
            if hora >= 6 and hora < 9 then "6-9" 
            else if hora >= 9 and hora < 12 then "9-12"
            else if hora >= 12 and hora < 15 then "12-15"
            else if hora >= 15 and hora < 18 then "15-18"
            else if hora >= 18 and hora < 21 then "18-21"
            else "21+", 
        type text),
    // Paso adicional: agregar columna de orden para rango horario
    Add_Rango_horario_order = Table.AddColumn(Add_Rango_horario, "rango_horario_orden", each 
        let
            hora = Time.Hour([Intervalo_Horario])
        in
            if hora >= 6 and hora < 9 then 1 
            else if hora >= 9 and hora < 12 then 2
            else if hora >= 12 and hora < 15 then 3
            else if hora >= 15 and hora < 18 then 4
            else if hora >= 18 and hora < 21 then 5
            else 6, 
        Int64.Type),

    #"AddLlave" = Table.AddColumn(Add_Rango_horario_order, "Llave", each Text.PadStart(
    Text.From(
        Time.Hour([Intervalo_Horario])), 2, "0") & ":" &
Text.PadStart(Text.From(Time.Minute([Intervalo_Horario])), 2, "0"
)),
// Convierto llave a text debido a que en mis tablas de hechos el campo llave viene también como text.
  #"Tipo de columna cambiado" = Table.TransformColumnTypes(AddLlave, {{"Llave", type text}})
in
    #"Tipo de columna cambiado"
